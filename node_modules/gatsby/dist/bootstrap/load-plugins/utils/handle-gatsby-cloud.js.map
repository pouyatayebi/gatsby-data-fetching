{"version":3,"sources":["../../../../src/bootstrap/load-plugins/utils/handle-gatsby-cloud.ts"],"names":["GATSBY_CLOUD_PLUGIN_NAME","GATSBY_PLUGIN_PREVIEW_NAME","addCloudPluginWhenInstalled","plugins","rootDir","name","cloudPluginLocation","processedGatsbyCloudPlugin","resolve","options","push","addGatsbyPluginPreviewWhenInstalled","addGatsbyPluginCloudPluginWhenInstalled","incompatibleGatsbyCloudPlugin","plugin","find","semver","satisfies","version","includePrerelease"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA;;;;;;AAEO,MAAMA,wBAAwB,GAAI,4BAAlC;;AACA,MAAMC,0BAA0B,GAAI,yCAApC;;;AAEP,SAASC,2BAAT,CACEC,OADF,EAEEC,OAFF,EAGEC,IAHF,EAIQ;AACN,QAAMC,mBAAmB,GAAG,yBAAkBF,OAAlB,EAA2BC,IAA3B,CAA5B;;AAEA,MAAIC,mBAAJ,EAAyB;AACvB,UAAMC,0BAA0B,GAAG,kCACjC;AACEC,MAAAA,OAAO,EAAEF,mBADX;AAEEG,MAAAA,OAAO,EAAE;AAFX,KADiC,EAKjCL,OALiC,CAAnC;AAOAD,IAAAA,OAAO,CAACO,IAAR,CAAaH,0BAAb;AACD;AACF;;AAEM,SAASI,mCAAT,CACLR,OADK,EAELC,OAFK,EAGC;AACNF,EAAAA,2BAA2B,CAACC,OAAD,EAAUC,OAAV,EAAmBH,0BAAnB,CAA3B;AACD;;AAEM,SAASW,uCAAT,CACLT,OADK,EAELC,OAFK,EAGC;AACNF,EAAAA,2BAA2B,CAACC,OAAD,EAAUC,OAAV,EAAmBJ,wBAAnB,CAA3B;AACD;;AAEM,SAASa,6BAAT,CACLV,OADK,EAEI;AACT,QAAMW,MAAM,GAAGX,OAAO,CAACY,IAAR,CACbD,MAAM,IAAIA,MAAM,CAACT,IAAP,KAAgBL,wBADb,CAAf;AAIA,SAAO,CAACgB,MAAM,CAACC,SAAP,CAAiBH,MAAM,CAAEI,OAAzB,EAAmC,eAAnC,EAAmD;AACzDC,IAAAA,iBAAiB,EAAE;AADsC,GAAnD,CAAR;AAGD","sourcesContent":["import { silent as resolveFromSilent } from \"resolve-from\"\nimport * as semver from \"semver\"\nimport { IPluginInfo } from \"../types\"\nimport { processPlugin } from \"../process-plugin\"\n\nexport const GATSBY_CLOUD_PLUGIN_NAME = `gatsby-plugin-gatsby-cloud`\nexport const GATSBY_PLUGIN_PREVIEW_NAME = `@gatsby-cloud-pkg/gatsby-plugin-preview`\n\nfunction addCloudPluginWhenInstalled(\n  plugins: Array<IPluginInfo>,\n  rootDir: string,\n  name: string\n): void {\n  const cloudPluginLocation = resolveFromSilent(rootDir, name)\n\n  if (cloudPluginLocation) {\n    const processedGatsbyCloudPlugin = processPlugin(\n      {\n        resolve: cloudPluginLocation,\n        options: {},\n      },\n      rootDir\n    )\n    plugins.push(processedGatsbyCloudPlugin)\n  }\n}\n\nexport function addGatsbyPluginPreviewWhenInstalled(\n  plugins: Array<IPluginInfo>,\n  rootDir: string\n): void {\n  addCloudPluginWhenInstalled(plugins, rootDir, GATSBY_PLUGIN_PREVIEW_NAME)\n}\n\nexport function addGatsbyPluginCloudPluginWhenInstalled(\n  plugins: Array<IPluginInfo>,\n  rootDir: string\n): void {\n  addCloudPluginWhenInstalled(plugins, rootDir, GATSBY_CLOUD_PLUGIN_NAME)\n}\n\nexport function incompatibleGatsbyCloudPlugin(\n  plugins: Array<IPluginInfo>\n): boolean {\n  const plugin = plugins.find(\n    plugin => plugin.name === GATSBY_CLOUD_PLUGIN_NAME\n  )\n\n  return !semver.satisfies(plugin!.version, `>=4.0.0-alpha`, {\n    includePrerelease: true,\n  })\n}\n"],"file":"handle-gatsby-cloud.js"}
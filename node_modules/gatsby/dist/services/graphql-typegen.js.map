{"version":3,"sources":["../../src/services/graphql-typegen.ts"],"names":["graphQLTypegen","program","store","parentSpan","reporter","Error","directory","activity","activityTimer","start","schema","definitions","getState","end"],"mappings":";;;;;AACA;;AAIA;;AAEO,eAAeA,cAAf,CAA8B;AACnCC,EAAAA,OADmC;AAEnCC,EAAAA,KAFmC;AAGnCC,EAAAA,UAHmC;AAInCC,EAAAA;AAJmC,CAA9B,EAK0B;AAC/B;AACA;AACA,MAAI,CAACH,OAAD,IAAY,CAACC,KAAb,IAAsB,CAACE,QAA3B,EAAqC;AACnC,UAAM,IAAIC,KAAJ,CACH,uDAAsD,CAAC,CAACJ,OAAQ,YAAW,CAAC,CAACC,KAAM,GADhF,CAAN;AAGD;;AACD,QAAMI,SAAS,GAAGL,OAAO,CAACK,SAA1B;AAEA,QAAMC,QAAQ,GAAGH,QAAQ,CAACI,aAAT,CACd,yCADc,EAEf;AACEL,IAAAA;AADF,GAFe,CAAjB;AAMAI,EAAAA,QAAQ,CAACE,KAAT;AAEA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BT,KAAK,CAACU,QAAN,EAAhC;AAEA,QAAM,oCAAmBN,SAAnB,EAA8BI,MAA9B,CAAN;AACA,QAAM,uCAAsBJ,SAAtB,EAAiCK,WAAjC,CAAN;AACA,QAAM,qCAAqBL,SAArB,EAAgCI,MAAhC,EAAwCC,WAAxC,CAAN;AAEAJ,EAAAA,QAAQ,CAACM,GAAT;AACD","sourcesContent":["import { IBuildContext } from \"../internal\"\nimport {\n  writeGraphQLFragments,\n  writeGraphQLSchema,\n} from \"../utils/graphql-typegen/file-writes\"\nimport { writeTypeScriptTypes } from \"../utils/graphql-typegen/ts-codegen\"\n\nexport async function graphQLTypegen({\n  program,\n  store,\n  parentSpan,\n  reporter,\n}: IBuildContext): Promise<void> {\n  // TypeScript requires null/undefined checks for these\n  // But this should never happen unless e.g. the state machine doesn't receive this information from a parent state machine\n  if (!program || !store || !reporter) {\n    throw new Error(\n      `Missing required params in graphQLTypegen. program: ${!!program}. store: ${!!store}.`\n    )\n  }\n  const directory = program.directory\n\n  const activity = reporter.activityTimer(\n    `Generating GraphQL and TypeScript types`,\n    {\n      parentSpan,\n    }\n  )\n  activity.start()\n\n  const { schema, definitions } = store.getState()\n\n  await writeGraphQLSchema(directory, schema)\n  await writeGraphQLFragments(directory, definitions)\n  await writeTypeScriptTypes(directory, schema, definitions)\n\n  activity.end()\n}\n"],"file":"graphql-typegen.js"}
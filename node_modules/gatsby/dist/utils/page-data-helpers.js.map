{"version":3,"sources":["../../src/utils/page-data-helpers.ts"],"names":["constructPageDataString","componentChunkName","matchPath","path","pagePath","staticQueryHashes","manifestId","result","body","JSON","stringify","reverseFixedPagePath","pageDataRequestPath","getPagePathFromPageDataPath","pageDataPath","matches","matchAll","requestedPagePath"],"mappings":";;;;;;;AAYO,SAASA,uBAAT,CACL;AACEC,EAAAA,kBADF;AAEEC,EAAAA,SAFF;AAGEC,EAAAA,IAAI,EAAEC,QAHR;AAIEC,EAAAA,iBAJF;AAKEC,EAAAA;AALF,CADK,EAQLC,MARK,EASG;AACR,MAAIC,IAAI,GACL,GAAD,GACC,yBAAwBP,kBAAmB,IAD5C,GAEC,UAASQ,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAyB,GAFnC,GAGC,YAAWG,MAAO,GAHnB,GAIC,uBAAsBE,IAAI,CAACC,SAAL,CAAeL,iBAAf,CAAkC,EAL3D;;AAOA,MAAIH,SAAJ,EAAe;AACbM,IAAAA,IAAI,IAAK,iBAAgBN,SAAU,GAAnC;AACD;;AAED,MAAII,UAAJ,EAAgB;AACdE,IAAAA,IAAI,IAAK,kBAAiBF,UAAW,GAArC;AACD;;AAEDE,EAAAA,IAAI,IAAK,GAAT;AAEA,SAAOA,IAAP;AACD;;AAEM,SAASG,oBAAT,CAA8BC,mBAA9B,EAAmE;AACxE,SAAOA,mBAAmB,KAAM,OAAzB,GAAmC,GAAnC,GAAwCA,mBAA/C;AACD;;AAEM,SAASC,2BAAT,CACLC,YADK,EAEU;AACf,QAAMC,OAAO,GAAGD,YAAY,CAACE,QAAb,CACd,wCADc,CAAhB;;AAGA,OAAK,MAAM,GAAGC,iBAAH,CAAX,IAAoCF,OAApC,EAA6C;AAC3C,WAAOJ,oBAAoB,CAACM,iBAAD,CAA3B;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["import type { IStructuredError } from \"gatsby-cli/src/structured-errors/types\"\nimport { IGatsbyPage } from \"../redux/types\"\n\nexport interface IPageData {\n  componentChunkName: IGatsbyPage[\"componentChunkName\"]\n  matchPath?: IGatsbyPage[\"matchPath\"]\n  path: IGatsbyPage[\"path\"]\n  staticQueryHashes: Array<string>\n  getServerDataError?: IStructuredError | Array<IStructuredError> | null\n  manifestId?: string\n}\n\nexport function constructPageDataString(\n  {\n    componentChunkName,\n    matchPath,\n    path: pagePath,\n    staticQueryHashes,\n    manifestId,\n  }: IPageData,\n  result: string | Buffer\n): string {\n  let body =\n    `{` +\n    `\"componentChunkName\":\"${componentChunkName}\",` +\n    `\"path\":${JSON.stringify(pagePath)},` +\n    `\"result\":${result},` +\n    `\"staticQueryHashes\":${JSON.stringify(staticQueryHashes)}`\n\n  if (matchPath) {\n    body += `,\"matchPath\":\"${matchPath}\"`\n  }\n\n  if (manifestId) {\n    body += `,\"manifestId\":\"${manifestId}\"`\n  }\n\n  body += `}`\n\n  return body\n}\n\nexport function reverseFixedPagePath(pageDataRequestPath: string): string {\n  return pageDataRequestPath === `index` ? `/` : pageDataRequestPath\n}\n\nexport function getPagePathFromPageDataPath(\n  pageDataPath: string\n): string | null {\n  const matches = pageDataPath.matchAll(\n    /^\\/?page-data\\/(.+)\\/page-data.json$/gm\n  )\n  for (const [, requestedPagePath] of matches) {\n    return reverseFixedPagePath(requestedPagePath)\n  }\n\n  return null\n}\n"],"file":"page-data-helpers.js"}